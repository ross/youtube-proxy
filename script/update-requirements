#!/usr/bin/env python3

from os.path import join
from subprocess import check_call, check_output
from sys import argv
from tempfile import TemporaryDirectory


def print_packages(packages, heading):
    print(f'{heading}:')
    print('  ', end='')
    print('\n  '.join(packages))


with TemporaryDirectory() as tmpdir:
    check_call(['python3', '-m', 'venv', tmpdir])

    # base needs
    pkgs = [
        'av>=9.2.0',
        'Jinja2>=3.1.2',
        'MarkupSafe>=2.1.1',
        'Werkzeug>=2.2.3',
        'certifi>=2022.12.07',
        'charset-normalizer>=2.1.0',
        'flask>=2.2.5',
        'idna>=3.3',
        'importlib-metadata>=4.12.0',
        'itsdangerous>=2.1.2',
        'requests>=2.31.0',
        'urllib3>=1.26.10',
        'waitress>=2.1.2',
        'zipp>=3.8.1',
    ]
    check_call([join(tmpdir, 'bin', 'pip'), 'install', *pkgs])
    frozen = check_output([join(tmpdir, 'bin', 'pip'), 'freeze'])
    frozen = set(frozen.decode('utf-8').strip().split('\n'))

    # dev additions
    pkgs = [
        'black==22.6.0',
        'click==8.1.3',
        'mypy-extensions==0.4.3',
        'pathspec==0.9.0',
        'platformdirs==2.5.2',
        'tomli==2.0.1',
        'typing_extensions==4.3.0',
    ]
    check_call([join(tmpdir, 'bin', 'pip'), 'install', *pkgs])
    dev_frozen = check_output([join(tmpdir, 'bin', 'pip'), 'freeze'])
    dev_frozen = set(dev_frozen.decode('utf-8').strip().split('\n')) - frozen

# pip installs the module itself along with deps so we need to get that out of
# our list by finding the thing that was file installed during dev
frozen = sorted(frozen)
dev_frozen = sorted(dev_frozen)

print_packages(frozen, 'frozen')
print_packages(dev_frozen, 'dev_frozen')

script = argv[0].replace('-template', '')

with open('requirements.txt', 'w') as fh:
    fh.write(f'# DO NOT EDIT THIS FILE DIRECTLY - use {script} to update\n')
    fh.write('\n'.join(frozen))
    fh.write('\n')

with open('requirements-dev.txt', 'w') as fh:
    fh.write(f'# DO NOT EDIT THIS FILE DIRECTLY - use {script} to update\n')
    fh.write('\n'.join(dev_frozen))
    fh.write('\n')
